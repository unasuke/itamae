version: 2.1
orbs:
  ruby: circleci/ruby@1.0.7

executors:
  docker:
    docker:
      - image: cimg/base:stable
  docker-1804:
    docker:
      - image: cimg/base:stable-18.04
  machine:
    machine:
      image: circleci/classic:201808-01

jobs:
  unit:
    parameters:
      ruby-version:
        type: string
      exec:
        type: executor
        default: ""
    executor: << parameters.exec >>
    steps:
      - checkout
      - ruby/install:
          version: << parameters.ruby-version >>
      - run: gem install bundler --version 1.17.3 --force
      - run: bundle install -j4
      - run: ruby -v
      - run: bundle exec rake spec:unit
  integration:
    parameters:
      ruby-version:
        type: string
    executor: machine
    # executor: docker
    steps:
      - checkout
      # - setup_remote_docker:
      #     version: 18.06.0-ce
      # - ruby/install:
      #     version: << parameters.ruby-version >>
      - run:
          name: RVM
          command: |
            # Disable IPv6
            mkdir -p ~/.gnupg/
            find ~/.gnupg -type d -exec chmod 700 {} \;
            echo "disable-ipv6" >> ~/.gnupg/dirmngr.conf
            count=0
            until gpg --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
            do
                count=$((count+1)); sleep 10;
                if [ $count -gt 2 ]; then
                    echo "Unable to receive GPG keys, FAILING";
                    exit 1;
                fi;
                echo "Network error: Unable to receive GPG keys. Will attempt again ($count/3)";
            done;
            ## Update if RVM is installed and exit
            if [ -x "$(command -v rvm -v)" ]; then
                rvm get stable
                exit 0
            fi
            curl -sSL "https://get.rvm.io" | bash -s stable
            # this should be what needs to be added to that $BASH_ENV since this is what's in bash_profile - i dont know when $HOME is set
            echo "export PATH=$HOME/.rvm/bin:$PATH" >> $BASH_ENV
            echo "source $HOME/.rvm/scripts/rvm" >> $BASH_ENV
            # this will source if anyone logs in noninteractively, nvm setup only adds nvm to the path, to get the rubygems later you need to source this again
            echo "source $HOME/.rvm/scripts/rvm" >> ~/.bashrc
            # source ~/.bashrc
      - run:
          name: rvm install << parameters.ruby-version >>
          command: |
            # rvm get stable --auto-dotfile
            which rvm
            export PATH=$HOME/.rvm/bin:$PATH
            echo $PATH
            rvm install << parameters.ruby-version >>
            rvm use << parameters.ruby-version >>
            # `rvm use` updates the path again, we'll want to go ahead and do this.
            echo "export PATH=$PATH" >> $BASH_ENV

      - run: gem install bundler --version 1.17.3 --force
      - run: bundle install -j4
      - run:
          command: |
            ruby -v
            export PATH=$HOME/.rvm/bin:$PATH
            ruby -v
      - run: bundle exec rake spec:integration:all
  unit-jit:
    parameters:
      ruby-version:
        type: string
    executor: docker
    steps:
      - checkout
      - ruby/install:
          version: << parameters.ruby-version >>
      - run: gem install bundler --version 1.17.3 --force
      - run: bundle install -j4
      - run: ruby -v
      - run: RUBYOPT=--jit bundle exec rake spec:unit
  integration-jit:
    parameters:
      ruby-version:
        type: string
    # executor: machine
    executor: docker
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.06.0-ce
      - ruby/install:
          version: << parameters.ruby-version >>
      - run: gem install bundler --version 1.17.3 --force
      - run: bundle install -j4
      - run: ruby -v
      - run: RUBYOPT=--jit bundle exec rake spec:integration:all

workflows:
  version: 2
  all-test:
    jobs:
      - unit:
          exec:
            name: docker-1804
          matrix:
            parameters:
              ruby-version: ["2.3"]
      - unit:
          exec:
            name: docker
          matrix:
            parameters:
              ruby-version: ["2.4", "2.5", "2.6", "2.7"]
      - integration:
          matrix:
            parameters:
              ruby-version: ["2.3", "2.4", "2.5", "2.6", "2.7"]
  # all-test-with-jit:
  #   jobs:
      - unit-jit:
          matrix:
            parameters:
              ruby-version: ["2.6", "2.7"]
      - integration-jit:
          matrix:
            parameters:
              ruby-version: ["2.6", "2.7"]
